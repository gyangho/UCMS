<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>응답 상세 정보</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Noto Sans KR', sans-serif;
      background: #f9fafb;
      height: 100vh;
      overflow: hidden;
    }

    .container {
      display: flex;
      height: 100vh;
    }

    .left-panel {
      flex: 1;
      background: white;
      border-right: 1px solid #e5e7eb;
      overflow-y: auto;
      padding: 20px;
    }

    .right-panel {
      flex: 1;
      background: white;
      overflow-y: auto;
      padding: 20px;
    }

    .panel-header {
      font-size: 18px;
      font-weight: 600;
      margin-bottom: 20px;
      padding-bottom: 10px;
      border-bottom: 2px solid #10b981;
      color: #111827;
    }

    .response-item {
      margin-bottom: 20px;
      padding: 15px;
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      background: #f9fafb;
    }

    .question {
      font-weight: 600;
      color: #374151;
      margin-bottom: 8px;
    }

    .answer {
      color: #6b7280;
      line-height: 1.5;
    }

    .member-info {
      background: #eff6ff;
      padding: 15px;
      border-radius: 8px;
      margin-bottom: 20px;
    }

    .member-info h3 {
      color: #1e40af;
      margin-bottom: 10px;
    }

    .info-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 10px;
    }

    .info-item {
      display: flex;
      justify-content: space-between;
    }

    .info-label {
      font-weight: 600;
      color: #374151;
    }

    .info-value {
      color: #6b7280;
    }

    .rating-select {
      background: #f3f4f6;
      border: 1px solid #d1d5db;
      border-radius: 4px;
      padding: 4px 8px;
      font-size: 14px;
      color: #374151;
      cursor: pointer;
      transition: border-color 0.2s ease;
    }

    .rating-select:hover {
      border-color: #9ca3af;
    }

    .rating-select:focus {
      outline: none;
      border-color: #10b981;
      box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.1);
    }

    /* 평가 값별 배경색 */
    .rating-select[data-current-rating="대기"] {
      background-color: #f3f4f6;
      color: #6b7280;
    }

    .rating-select[data-current-rating="불합격"] {
      background-color: #fef2f2;
      color: #dc2626;
    }

    .rating-select[data-current-rating="느별"] {
      background-color: #fffbeb;
      color: #d97706;
    }

    .rating-select[data-current-rating="느괜"] {
      background-color: #eff6ff;
      color: #2563eb;
    }

    .rating-select[data-current-rating="느좋"] {
      background-color: #f7fdf0;
      color: #64a316;
    }

    .rating-select[data-current-rating="합격"] {
      background-color: #f0fdf4;
      color: #047857;
    }

    /* 드롭다운 옵션 색상 */
    .rating-select option[value="대기"] {
      background-color: #f3f4f6;
      color: #6b7280;
    }

    .rating-select option[value="불합격"] {
      background-color: #fef2f2;
      color: #dc2626;
    }

    .rating-select option[value="느별"] {
      background-color: #fffbeb;
      color: #d97706;
    }

    .rating-select option[value="느괜"] {
      background-color: #eff6ff;
      color: #2563eb;
    }

    .rating-select option[value="느좋"] {
      background-color: #f7fdf0;
      color: #64a316;
    }

    .rating-select option[value="합격"] {
      background-color: #f0fdf4;
      color: #047857;
    }

    .shared-doc-container {
      height: calc(100vh - 100px);
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      background: white;
    }

    .loading {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 200px;
      color: #6b7280;
    }
  </style>
</head>

<body>
<div class="container">
  <!-- 왼쪽 패널: 응답 상세 정보 -->
  <div class="left-panel">
    <div class="panel-header">응답 상세 정보</div>

    <% if (memberInfo) { %>
    <div class="member-info">
      <h3>지원자 정보</h3>
      <div class="info-grid">
        <div class="info-item">
          <span class="info-label">학번:</span>
          <span class="info-value"><%= memberInfo.student_id || '미입력' %></span>
        </div>
        <div class="info-item">
          <span class="info-label">이름:</span>
          <span class="info-value"><%= memberInfo.name || '미입력' %></span>
        </div>
        <div class="info-item">
          <span class="info-label">학과(부):</span>
          <span class="info-value"><%= memberInfo.major || '미입력' %></span>
        </div>
        <div class="info-item">
          <span class="info-label">전화번호:</span>
          <span class="info-value"><%= memberInfo.phone || '미입력' %></span>
        </div>
        <div class="info-item">
          <span class="info-label">성별:</span>
          <span class="info-value"><%= memberInfo.gender || '미입력' %></span>
        </div>
        <div class="info-item">
          <span class="info-label">평가:</span>
          <select class="rating-select" data-response-id="<%= memberInfo.response_id %>" data-current-rating="<%= memberInfo.rating || '대기' %>">
            <option value="대기" <%= (memberInfo.rating || '대기') === '대기' ? 'selected' : '' %>>대기</option>
            <option value="불합격" <%= (memberInfo.rating || '대기') === '불합격' ? 'selected' : '' %>>불합격</option>
            <option value="느별" <%= (memberInfo.rating || '대기') === '느별' ? 'selected' : '' %>>느별</option>
            <option value="느괜" <%= (memberInfo.rating || '대기') === '느괜' ? 'selected' : '' %>>느괜</option>
            <option value="느좋" <%= (memberInfo.rating || '대기') === '느좋' ? 'selected' : '' %>>느좋</option>
            <option value="합격" <%= (memberInfo.rating || '대기') === '합격' ? 'selected' : '' %>>합격</option>
          </select>
        </div>
      </div>
    </div>
    <% } %>

    <% if (responses && responses.length > 0) { %>
    <% responses.forEach(response => { %>
    <div class="response-item">
      <div class="question"><%= response.question %></div>
      <div class="answer"><%= response.answer || '응답 없음' %></div>
    </div>
    <% }) %>
    <% } else { %>
    <div class="loading">응답 데이터를 불러오는 중...</div>
    <% } %>
  </div>

  <!-- 오른쪽 패널: 공유 문서 -->
  <div class="right-panel">
    <div class="panel-header">평가 노트</div>
    <div class="shared-doc-container" id="shared-doc">
      <div class="loading">공유 문서를 불러오는 중...</div>
    </div>
  </div>
</div>

<!-- WebSocket 기반 공유 문서 -->
<script>
  const docId = 'response-<%= responseId %>';
  let socket = null;
  let editor = null;

  function initEditor() {
    const container = document.getElementById('shared-doc');
    container.innerHTML = '';

    // 텍스트 에디터 생성
    editor = document.createElement('textarea');
    editor.style.width = '100%';
    editor.style.height = '100%';
    editor.style.border = 'none';
    editor.style.resize = 'none';
    editor.style.fontFamily = 'monospace';
    editor.style.fontSize = '14px';
    editor.style.padding = '15px';
    editor.style.outline = 'none';
    editor.placeholder = '평가 노트를 작성해주세요...';

    // WebSocket 연결
    connectWebSocket();

    // 변경사항 감지 (디바운스 적용)
    let timeout = null;
    editor.addEventListener('input', function() {
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        if (socket && socket.readyState === WebSocket.OPEN) {
          socket.send(JSON.stringify({
            type: 'update',
            docId: docId,
            content: editor.value
          }));
        }
      }, 500);
    });

    container.appendChild(editor);
  }

  function connectWebSocket() {
    // nginx를 통한 WebSocket 연결
    const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
    const host = window.location.hostname;
    const wsUrl = `${protocol}//${host}/sharedb`;

    console.log('WebSocket 연결 시도:', wsUrl);
    socket = new WebSocket(wsUrl);

    socket.onopen = function() {
      console.log('WebSocket 연결됨');
      // 문서 내용 요청
      socket.send(JSON.stringify({
        type: 'get',
        docId: docId
      }));
    };

    socket.onclose = function(event) {
      console.log('WebSocket 연결 해제:', event.code, event.reason);
      // 3초 후 재연결 시도
      setTimeout(connectWebSocket, 3000);
    };

    socket.onmessage = function(event) {
      const data = JSON.parse(event.data);

      if (data.type === 'doc' && data.docId === docId) {
        // 초기 문서 내용 설정
        editor.value = data.content || '';
      } else if (data.type === 'update' && data.docId === docId) {
        // 다른 클라이언트의 업데이트 반영
        if (editor.value !== data.content) {
          editor.value = data.content;
        }
      }
    };

    socket.onerror = function(error) {
      console.error('WebSocket 오류:', error);
    };

    socket.onclose = function() {
      console.log('WebSocket 연결 해제');
      // 3초 후 재연결 시도
      setTimeout(connectWebSocket, 3000);
    };
  }

  // 에디터 초기화
  initEditor();

  // 평가 select 변경 시 DB 업데이트
  document.addEventListener('DOMContentLoaded', function() {
    const ratingSelect = document.querySelector('.rating-select');

    if (ratingSelect) {
      ratingSelect.addEventListener('change', async function() {
        const responseId = this.getAttribute('data-response-id');
        const newRating = this.value;
        const currentRating = this.getAttribute('data-current-rating');

        // 현재 값과 같으면 업데이트하지 않음
        if (newRating === currentRating) {
          return;
        }

        try {
          const response = await fetch('/recruit/update-rating', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              response_id: responseId,
              rating: newRating
            })
          });

          if (response.ok) {
            // 성공 시 현재 값 업데이트
            this.setAttribute('data-current-rating', newRating);
            console.log('평가 업데이트 성공:', newRating);

            // 성공 메시지 표시 (선택사항)
            const successMessage = document.createElement('div');
            successMessage.textContent = '평가가 업데이트되었습니다.';
            successMessage.style.cssText = `
              position: fixed;
              top: 20px;
              right: 20px;
              background: #10b981;
              color: white;
              padding: 10px 15px;
              border-radius: 4px;
              font-size: 14px;
              z-index: 1000;
              animation: fadeInOut 3s ease-in-out;
            `;
            document.body.appendChild(successMessage);

            // 3초 후 메시지 제거
            setTimeout(() => {
              successMessage.remove();
            }, 3000);
          } else {
            // 실패 시 원래 값으로 되돌리기
            this.value = currentRating;
            console.error('평가 업데이트 실패');
            alert('평가 업데이트에 실패했습니다.');
          }
        } catch (error) {
          // 에러 시 원래 값으로 되돌리기
          this.value = currentRating;
          console.error('평가 업데이트 중 오류:', error);
          alert('평가 업데이트 중 오류가 발생했습니다.');
        }
      });
    }
  });

  // 성공 메시지 애니메이션
  const style = document.createElement('style');
  style.textContent = `
    @keyframes fadeInOut {
      0% { opacity: 0; transform: translateY(-10px); }
      10% { opacity: 1; transform: translateY(0); }
      90% { opacity: 1; transform: translateY(0); }
      100% { opacity: 0; transform: translateY(-10px); }
    }
  `;
  document.head.appendChild(style);
</script>
</body>

</html>